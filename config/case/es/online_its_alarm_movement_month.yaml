-
    name: "online_its_alarm_movement_month_${CITY_ID}"
    host: "${ES2307}"
    uri: "/_sql"
    params: "select count(*) from online_its_alarm_movement_month where date in('${YESTERDAY}') and city_id=${CITY_ID} limit 1"
    func: "check_es"
    method: "post"
    desc: "${CITY_NAME}_online_its_alarm_movement_month_离线数据"
    group: "es_online_its_alarm_movement_month"
    monitor_key: "monitor_api_es_movement_month_${CITY_ID}"
    monitor_interval: 100
    time_slot:
      -
        start_time: "08:00:00"
        end_time: "21:00:00"

    assert_true:
      -
        assert_key: "$.hits.total"
        assert: ">"
        expected: 0
        err_desc: "数据量为空"


-
    name: "online_its_alarm_movement_month_last_${CITY_ID}"
    host: "${ES2307}"
    uri: "/_sql"
    params: "select count(*) from online_its_alarm_movement_month where last_time > '${LAST_DATE_TIME}' and city_id=${CITY_ID} order by start_time desc limit 1"
    func: "check_cliff"
    method: "json"
    desc: "${CITY_NAME}_online_its_alarm_movement_month_数据掉崖"
    group: "es_online_its_alarm_movement_month_last"
    monitor_key: "monitor_api_es_movement_month_last_${CITY_ID}"
#    redis_host: "100.69.239.57"
#    redis_port: "3060"
    redis: "its-tool"
#    redis_host: "127.0.0.1"
#    redis_port: "6379"
    last_hour_key: "new_its_realtime_lasthour_${CITY_ID}"
    monitor_interval: 100
    city_id: "${CITY_ID}"
    time_slot:
      -
        start_time: "07:00:00"
        end_time: "10:00:00"
      -
        start_time: "17:00:00"
        end_time: "20:00:00"

    assert_true:
      -
        actual: "$.hits.total"
        assert: "<="
        expected: 0
        err_desc: "数据量为空"

    last_assert_true:
      -
        actual: "${LAST_SUBTRACT_NOW_TOTAL}"
        assert: "<"
        expected: "${TOTAL_EXPECTED}"
        err_desc: "数据掉崖"

#        func: "last_assert_true"
#        check_rule : "last_res != 'None' and (res['hits']['total'] > 0 and last_res['hits']['total'] > 0 and (last_res['hits']['total'] - res['hits']['total']) > last_res['hits']['total'] * 0.4)"
#    assert_true:
#        own: "last_assert_true"
#        assert_key: "$.hits.total"
#        compare_key: "$.hits.total"
#        assert: ">"
#        expected:  "last_res['hits']['total'] * 0.4"
#        eval: ""
#        assert_true: ""